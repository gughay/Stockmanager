#pragma checksum "C:\Users\072820\source\repos\StockManager\StockManager.Client\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "400e83a65c07661a9403567c7316ec774fa40e07"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\072820\source\repos\StockManager\StockManager.Client\Views\_ViewImports.cshtml"
using StockManager.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\072820\source\repos\StockManager\StockManager.Client\Views\_ViewImports.cshtml"
using StockManager.Client.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"400e83a65c07661a9403567c7316ec774fa40e07", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"aa7a1b5ab77f8db542b2ad4fe521adf75404ab81", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\072820\source\repos\StockManager\StockManager.Client\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "StockChart";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div id=""div"" class=""row"" style=""padding:20px;"">
    <div class=""col-md-3"">
        <div class=""row form-group form-inline"" style=""margin-top:5px"">
            <label class=""col-sm-5 control-label"" for=""ticker"">Ticker:</label>
            <div class=""col-sm-7"">
                <input id=""ticker"" type=""text"" class=""form-control input-sm"" style=""height:25px;width:100%"" value=""SPY"" />
            </div>
        </div>
        <div class=""row form-group form-inline"" style=""margin-top:-5px"">
            <label class=""col-sm-5 control-label"" for=""startDate"">Start Date:</label>
            <div class=""col-sm-7"">
                <input id=""startDate"" type=""text"" class=""form-control input-sm"" style=""height:25px;width:100%"" value=""2021-08-09"" />
            </div>
        </div>
        <div class=""row form-group form-inline"" style=""margin-top:-5px"">
            <label class=""col-sm-5 control-label"" for=""endDate"">End Date:</label>
            <div class=""col-sm-7"">
                <input id=""endDate""");
            WriteLiteral(@" type=""text"" class=""form-control input-sm"" style=""height:25px;width:100%"" value=""2021-08-16"" />
            </div>
        </div>
        <div class=""row form-group form-inline"" style=""margin-top:20px"">
            <div class=""col-sm-5""></div>
            <div class=""col-sm-7"">
                <button id=""btnCreateChart"" class=""btn btn-primary"">Create Chart</button>
            </div>
        </div>
    </div>
    <div class=""col-md-9"">
        <div id=""chart"" style=""width:100%;height:700px;overflow:hidden;padding:10px"">
            <div id=""candlestick"" style=""height:55%""></div>
            <div id=""volume"" style=""height:30%;margin-top:-1%""></div>
            <div id=""filter"" style=""height:15%;margin-top:1%""></div>
        </div>
    </div>
</div>


");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"" src=""https://www.gstatic.com/charts/loader.js""></script>

    <script>
        createStockChart();

        $('#btnCreateChart').click(function () {
            createStockChart();
        });

        function createStockChart() {
            google.charts.load('current', { 'packages': ['corechart', 'controls'] });
            google.charts.setOnLoadCallback(drawChart);
            var chart_div = document.getElementById('chart');
            var ticker = document.getElementById('ticker').value;
            var startDate = document.getElementById('startDate').value;
            var endDate = document.getElementById('endDate').value;

            var viewStartDate = (new Date(endDate));
            viewStartDate.setMonth(viewStartDate.getMonth() - 3);
            var viewEndDate = new Date(endDate);

            function drawChart() {
                var data = new google.visualization.DataTable();
                data.addColumn('datetime', 'Date');");
                WriteLiteral(@"
                data.addColumn('number', 'Open');
                data.addColumn('number', 'High');
                data.addColumn('number', 'Low');
                data.addColumn('number', 'Close');
                data.addColumn('number', 'Volume');
                //data.addColumn('string', 'PerformanceData');

                $.ajax({
                    url: '/api/apiStockData/' + ticker + '/' + startDate + '/' + endDate + '/daily',
                    method: 'GET',
                    dataType: 'json'
                }).done(function (d) {
                    d.forEach(function (di) {
                        data.addRow([{ v: new Date(di.date), f: di.date }, di.open, di.high, di.low, di.close, di.volume]);
                        console.log(di)
                    });

                    var dashboard = new google.visualization.Dashboard(chart_div);
                    var control = new google.visualization.ControlWrapper({
                        controlType: 'ChartRangeFilter',");
                WriteLiteral(@"
                        containerId: 'filter',
                        options: {
                            filterColumnIndex: 0,
                            ui: {
                                chartType: 'LineChart',
                                chartOptions: {
                                    chartArea: {
                                        height: '80%', width: '85%', left: 100,
                                        backgroundColor: { stroke: ""gray"", strokeWidth: 1 }
                                    },
                                    hAxis: { baselineColor: 'none' }
                                },
                                chartView: { columns: [0, 4] },
                            }
                        },
                        state: {
                            range: {
                                start: viewStartDate,
                                end: viewEndDate
                            }
                        }
                  ");
                WriteLiteral(@"  });

                    var chart = new google.visualization.ChartWrapper({
                        chartType: 'CandlestickChart',
                        containerId: 'candlestick',
                        options: {
                            chartArea: { height: '80%', width: '85%', left: 100, backgroundColor: { stroke: ""gray"", strokeWidth: 1 } },
                            hAxis: { type: 'category', slantedText: false, maxTextLines: 1, maxAlternation: 1 },
                            legend: { position: 'none' },
                            candlestick: {
                                fallingColor: { strokeWidth: 0, fill: '#a52714' },
                                risingColor: { strokeWidth: 0, fill: '#0f9d58' }
                            },
                            title: 'Stock Price: ' + ticker,
                        },
                        view: { columns: [0, 3, 1, 4, 2] }
                    });

                    var volume = new google.visualization.ChartWrapp");
                WriteLiteral(@"er({
                        chartType: 'ColumnChart',
                        containerId: 'volume',
                        options: {
                            chartArea: { height: '80%', width: '85%', left: 100, top: 40, bottom: 30, backgroundColor: { stroke: ""gray"", strokeWidth: 1 } },
                            hAxis: { type: 'category', slantedText: false, maxTextLines: 1, maxAlternation: 1 },
                            legend: { position: 'none' },
                            title: ""Volume: "" + ticker
                        },
                        view: { columns: [0, 5] }
                    });

                    dashboard.bind(control, [chart, volume]);
                    dashboard.draw(data);

                }).fail(function () {
                    alert('Failed to create the chart. Please try it again.');
                });
            }
        }

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
